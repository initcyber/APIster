from selenium import webdriver
from selenium.webdriver.chrome.service import Service as ChromeService
from selenium.webdriver.chrome.options import Options
import time

# Set up Chrome options
chrome_options = Options()
chrome_options.add_argument("--headless")  # Run Chrome in headless mode (without GUI)

# Path to your ChromeDriver executable
chrome_path = "/path/to/chromedriver"

# Initialize ChromeDriver
driver = webdriver.Chrome(service=ChromeService(executable_path=chrome_path), options=chrome_options)

# Navigate to the webpage
url = "https://example.com"
driver.get(url)

# Allow some time for dynamic content to load
time.sleep(5)

# Capture network requests
network_requests = driver.execute_script("return window.performance.getEntries();")

# Print the captured network requests
for request in network_requests:
    print(request['name'])

# Close the browser
driver.quit()

######
You can install ChromeDriver on Linux by following these steps:

1. **Download ChromeDriver:**
   Visit the [ChromeDriver download page](https://sites.google.com/chromium.org/driver/) and download the version that corresponds to your Chrome browser version.

2. **Extract the Archive:**
   After downloading, extract the archive. You can use the following commands in the terminal:

   ```bash
   unzip chromedriver_linux64.zip  # Replace with your downloaded file name
   ```

3. **Move the Executable to a Directory in Your PATH:**
   It's a good practice to move the `chromedriver` executable to a directory that is included in your system's PATH. For example, you can move it to `/usr/local/bin`:

   ```bash
   sudo mv chromedriver /usr/local/bin/
   ```

4. **Set Permissions:**
   Make sure the `chromedriver` executable has the proper permissions:

   ```bash
   sudo chmod +x /usr/local/bin/chromedriver
   ```

Now, you should be able to use `chromedriver` in your Selenium scripts on Linux. If you encounter any issues, ensure that your Chrome browser is up to date, and the ChromeDriver version matches your browser version.